package datastructure.tree;

/**
 * m阶的B-树，或为空树，或为满足下列特性的m叉树
 * 1. 树中每个节点至多有m棵子树（m-1个关键字）
 * 2. 若根节点不是叶子节点则至少有两棵子树
 * 3. 除根之外的所有非终端节点至少有ceil(m/2)棵子树（ceil(m/2)-1个关键字）
 * 4. 所有的非终端节点中包含下列信息数据（n,A0,K1,A1,K2,A2,...,Kn,An）
 * 其中：Ki(i=1,...,n)为关键字，且Ki<Ki+1(i=1,...,n-1);
 * Ai(i=0,...,n)为指向子树根节点的指针,且指针Ai-1所指子树中所有节点的关键字均小于Ki(i=1,...,n)
 * An所指子树中所有节点的关键字均大于Kn,n(ceil(m/2)-1 <= n <= m-1)为关键字的个数
 * 5. 所有的叶子节点都出现在同一层次上，并且不带信息（可以看做是外部节点或查找失败的节点，实际上这些节点不存在，指向这些节点的指针为空）
 * 分裂时，将（关键字-1）一分为二，然后将中间的放到父节点中
 * 分裂函数写的时候，要注意父节点指针的更改
 *
 * @author Ares
 * @date 2018/6/27 15:34
 */
public class BTree
{
}
